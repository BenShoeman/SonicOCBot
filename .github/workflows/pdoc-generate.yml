name: Generate documentation

on:
  push:
    branches:
      - master

  workflow_dispatch:

permissions:
  contents: read

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout commit
        uses: actions/checkout@v3

      - name: Clone private assets repo into checked out directory
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.PRIVATE_ASSETS_PRIVATE_KEY }}"
          git clone git@github.com:BenShoeman/SonicOCBot-private-assets.git $GITHUB_WORKSPACE/../PrivateAssets
          rsync -a $GITHUB_WORKSPACE/../PrivateAssets/ $GITHUB_WORKSPACE/

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Set up venv cache
        uses: syphar/restore-virtualenv@v1
        id: cache-venv
        with:
          requirement_files: requirements/minimal.txt

      - name: Set up pip cache
        uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Install requirements in venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: pip install -r $GITHUB_WORKSPACE/requirements/minimal.txt

      - name: Generate docs
        run: pdoc --docformat numpy -o docs/ src

      - run: tar --directory docs/ -hcf artifact.tar .
      - uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ./artifact.tar

  deploy-docs:
    needs: generate-docs
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
